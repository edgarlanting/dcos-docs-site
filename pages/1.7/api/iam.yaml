swagger: '2.0'
info:
  version: 1.0.0
  title: ' Bouncer (DCOS IAM Service) HTTP API'
schemes:
  - http
  - https
paths:
  /auth/login:
    post:
      summary: Authenticate using username (uid) and password, retrieve auth token.
      description: Authenticate using username (uid) and password, retrieve auth token.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Credentials
          description: uid & password.
          in: body
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        200:
          description: Authentication successful. Response body contains authentication token (the token is also included in a cookie set with the response).
          schema:
            $ref: "#/definitions/Token"
          headers:
            Set-Cookie:
              description: Token (implementation detail for browser support, should not be of interest to general API consumers)
              type: string
        401:
          description: Authentication failed.

  /users:
    get:
      summary: Retrieve all user objects.
      description: Retrieve `User` objects.
      produces:
        - application/json
      responses:
        200:
          description: Success.
          schema:
            type: object
            properties:
              array:
                type: array
                items:
                  $ref: "#/definitions/User"

  /users/{uid}:
    get:
      summary: Get single user object.
      description: Get specific `User` object.
      produces:
        - application/json
      parameters:
        - name: uid
          in: path
          required: true
          description: The id of the user to retrieve.
          type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: "#/definitions/User"
    put:
      summary: Create user.
      description: Create user (uid in url, details incl. credentials in body).
      consumes:
        - application/json
      parameters:
        - name: uid
          in: path
          required: true
          description: The id of the user to create.
          type: string
        - name: User creation object
          description: Password/description.
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserCreate"
      responses:
        201:
          description: User created.
        409:
          description: User already exists.
    patch:
      summary: Update user.
      description: Update existing user (meta data and/or password).
      consumes:
        - application/json
      parameters:
        - name: uid
          in: path
          required: true
          description: The id of the user to modify.
          type: string
        - name: User update object
          description: Password/description.
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserUpdate"
      responses:
        204:
          description: Update applied.
    delete:
      summary: Delete user.
      description: Delete user.
      parameters:
        - name: uid
          in: path
          required: true
          description: The id of the user to delete.
          type: string
      responses:
        204:
          description: Success.

  /users/{uid}/groups:
    get:
      summary: Retrieve groups the user is member of.
      description: Retrieve groups the user is member of.
      produces:
        - application/json
      parameters:
        - name: uid
          in: path
          required: true
          description: The id of the user.
          type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: "#/definitions/UserGroups"

  /users/{uid}/permissions:
    get:
      summary: Retrieve permissions a user has.
      description: Retrieve permissions this user has, and
        distinguish direct permissions and those that are obtained through
        group membership.
      produces:
        - application/json
      parameters:
        - name: uid
          in: path
          required: true
          description: The id of the user.
          type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: "#/definitions/UserPermissions"

  /groups:
    get:
      summary: Retrieve all group objects.
      description: Retrieve array of `Group` objects.
      produces:
        - application/json
      responses:
        '200':
          description: Success.
          schema:
            type: object
            properties:
              array:
                type: array
                items:
                  $ref: "#/definitions/Group"

  /groups/{gid}:
    get:
      summary: Get single group object.
      description: Get specific `Group` object.
      produces:
        - application/json
      parameters:
        - name: gid
          in: path
          required: true
          description: The id of the group to retrieve.
          type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: "#/definitions/Group"
    put:
      summary: Create a group.
      description: Create a group.
      consumes:
        - application/json
      parameters:
        - name: gid
          in: path
          required: true
          description: The id of the group.
          type: string
        - name: Group creation object
          in: body
          required: true
          schema:
            $ref: "#/definitions/GroupCreate"
      responses:
        201:
          description: Group created.
        409:
          description: Group exists.
    patch:
      summary: Update group.
      description: Update existing group (description).
      consumes:
        - application/json
      parameters:
        - name: gid
          in: path
          required: true
          description: The id of the group to modify.
          type: string
        - name: Group update object
          in: body
          required: true
          schema:
            $ref: "#/definitions/GroupUpdate"
      responses:
        204:
          description: Update applied.
    delete:
      summary: Delete group.
      description: Delete group.
      parameters:
        - name: gid
          in: path
          required: true
          description: The id of the group to delete.
          type: string
      responses:
        204:
          description: Success

  /groups/{gid}/users:
    get:
      summary: Retrieve members of a group.
      description: Retrieve users that are member of this group.
      produces:
        - application/json
      parameters:
        - name: gid
          in: path
          required: true
          description: The group id.
          type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: "#/definitions/GroupUsers"

  /groups/{gid}/permissions:
    get:
      summary: Retrieve group permissions.
      description: Retrieve permissions of this group.
      produces:
        - application/json
      parameters:
        - name: gid
          in: path
          required: true
          description: The group id.
          type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: "#/definitions/GroupPermissions"

  /groups/{gid}/users/{uid}:
    delete:
      summary: Delete user from group.
      description: Delete user from group.
      parameters:
        - name: gid
          in: path
          required: true
          description: The id of the group to delete from.
          type: string
        - name: uid
          in: path
          required: true
          description: The id of the user to delete.
          type: string
      responses:
        204:
          description: Success.
    put:
      summary: Add user to group.
      description: Add user to group.
      parameters:
        - name: gid
          in: path
          required: true
          description: The id of the group to add the user to.
          type: string
        - name: uid
          description: The ID of the user to add.
          in: path
          required: true
          type: string
      responses:
        204:
          description: Success
        409:
          description: User is already part of the group.

  /acls:
    get:
      summary: Retrieve all ACL objects.
      description: Get array of `ACL` objects.
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              array:
                type: array
                items:
                  $ref: "#/definitions/ACL"

  /acls/{rid}:
    get:
      summary: Retrieve ACL for a certain resource.
      description: Retrieve single `ACL` object, for a specific resource.
      produces:
        - application/json
      parameters:
        - name: rid
          in: path
          required: true
          description: The id of the resource to retrieve the ACL for.
          type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: "#/definitions/ACL"
    put:
      summary: Create ACL for a certain resource.
      description: Create new ACL for resource with ID `rid`
        (description in body, no permissions by default).
      consumes:
        - application/json
      parameters:
        - name: rid
          in: path
          required: true
          description: The id of the resource for which the ACL should be created.
          type: string
        - name: ACL
          in: body
          required: true
          schema:
            $ref: "#/definitions/ACLCreate"
      responses:
        201:
          description: ACL created.
        409:
          description: Already exists (this resource already has an ACL set).
    patch:
      summary: Update ACL for a certain resource.
      description: Update ACL for resource with ID `rid`.
      consumes:
        - application/json
      parameters:
        - name: rid
          in: path
          required: true
          description: The id of the resource for which the ACL should be created.
          type: string
        - name: ACL update object
          description: New ACL.
          in: body
          required: true
          schema:
            $ref: "#/definitions/ACLUpdate"
      responses:
        204:
          description: Success.
    delete:
      summary: Delete ACL for a certain resource.
      description: Delete ACL of resource with ID `rid`.
      parameters:
        - name: rid
          in: path
          required: true
          description: The id of resource for which the ACL should be deleted.
          type: string
      responses:
        204:
          description: Success.

  /acls/{rid}/users/{uid}:
    get:
      summary: Get allowed actions for given resource and user.
      description: Get allowed actions for given resource and user.
      produces:
        - application/json
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID
          type: string
        - name: uid
          in: path
          required: true
          description: user ID
          type: string
      responses:
        200:
          description: Success.
          schema:
            type: object
            properties:
              array:
                type: array
                items:
                  $ref: "#/definitions/Action"
    delete:
      summary: Forbid all actions of given user to given resource.
      description: Forbid all actions of given user to given resource.
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID.
          type: string
        - name: uid
          in: path
          required: true
          description: user ID.
          type: string
      responses:
        204:
          description: Success.

  /acls/{rid}/users/{uid}/{action}:
    get:
      summary: Query whether action is allowed or not.
      description: Query whether action is allowed or not.
      produces:
        - application/json
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID
          type: string
        - name: uid
          in: path
          required: true
          description: user ID
          type: string
        - name: action
          in: path
          required: true
          description: action name
          type: string
      responses:
        200:
          description: Boolean answer in JSON response body.
          schema:
            $ref: "#/definitions/ActionAllowed"
    put:
      summary: Permit single action for given user and resource.
      description: Permit single action for given user and resource.
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID.
          type: string
        - name: uid
          in: path
          required: true
          description: user ID.
          type: string
        - name: action
          in: path
          required: true
          description: action name
          type: string
      responses:
        204:
          description: Success.
    delete:
      summary: Forbid single action for given user and resource.
      description: Forbid single action for given user and resource.
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID.
          type: string
        - name: uid
          in: path
          required: true
          description: user ID.
          type: string
        - name: action
          in: path
          required: true
          description: action name
          type: string
      responses:
        204:
          description: Success.

  /acls/{rid}/groups/{gid}:
    get:
      summary: Get allowed actions for given resource and group.
      description: Get allowed actions for given resource and group.
      produces:
        - application/json
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID
          type: string
        - name: gid
          in: path
          required: true
          description: group ID
          type: string
      responses:
        200:
          description: Success.
          schema:
            type: object
            properties:
              array:
                type: array
                items:
                  $ref: "#/definitions/Action"
    delete:
      summary: Forbid all actions of given group to given resource.
      description: Forbid all actions of given group to given resource.
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID.
          type: string
        - name: gid
          in: path
          required: true
          description: group ID.
          type: string
      responses:
        204:
          description: Success.

  /acls/{rid}/groups/{gid}/{action}:
    get:
      summary: Query whether action is allowed or not.
      description: Query whether action is allowed or not.
      produces:
        - application/json
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID
          type: string
        - name: gid
          in: path
          required: true
          description: group ID
          type: string
        - name: action
          in: path
          required: true
          description: action name
          type: string
      responses:
        200:
          description: Boolean answer in JSON response body.
          schema:
            $ref: "#/definitions/ActionAllowed"
    put:
      summary: Permit single action for given resource and group.
      description: Permit single action for given resource and group.
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID.
          type: string
        - name: gid
          in: path
          required: true
          description: group ID.
          type: string
        - name: action
          in: path
          required: true
          description: action name
          type: string
      responses:
        204:
          description: Success.
    delete:
      summary: Forbid single action for given resource and group.
      description: Forbid single action for given resource and group.
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID.
          type: string
        - name: gid
          in: path
          required: true
          description: group ID.
          type: string
        - name: action
          in: path
          required: true
          description: action name
          type: string
      responses:
        204:
          description: Success.

  /acls/{rid}/permissions:
    get:
      summary: Retrieve all permissions for resource.
      description: Retrieve all permissions that are set for a specific resource.
      produces:
        - application/json
      parameters:
        - name: rid
          in: path
          required: true
          description: resource ID
          type: string
      responses:
        200:
          description: Success.
          schema:
            $ref: "#/definitions/ACLPermissions"

definitions:
  Credentials:
    type: object
    required:
      - uid
      - password
    properties:
      uid:
        type: string
      password:
        type: string
    additionalProperties: false

  Token:
    type: object
    properties:
      token:
        type: string
    additionalProperties: false

  Action:
    type: object
    properties:
      name:
        type: string
      url:
        type: string
    additionalProperties: false

  User:
    type: object
    properties:
      uid:
        type: string
      url:
        type: string
      description:
        type: string
      is_remote:
        type: boolean
    additionalProperties: false

  UserCreate:
    type: object
    required:
      - password
    properties:
      description:
        type: string
      password:
        type: string
    additionalProperties: false

  UserUpdate:
    type: object
    properties:
      description:
        type: string
      password:
        type: string
    additionalProperties: false

  UserGroups:
    type: object
    properties:
      array:
        type: array
        items:
          type: object
          properties:
            membershipurl:
              type: string
            group:
              $ref: "#/definitions/Group"

  UserPermissions:
    type: object
    properties:
      direct:
        type: array
        items:
          type: object
          properties:
            rid:
              type: string
            description:
              type: string
            aclurl:
              type: string
            actions:
              type: array
              items:
                $ref: "#/definitions/Action"
      groups:
        type: array
        items:
          type: object
          properties:
            rid:
              type: string
            gid:
              type: string
            description:
              type: string
            aclurl:
              type: string
            membershipurl:
              type: string
            actions:
              type: array
              items:
                $ref: "#/definitions/Action"

  Group:
    type: object
    properties:
      gid:
        type: string
      url:
        type: string
      description:
        type: string
    additionalProperties: false

  GroupCreate:
    type: object
    properties:
      description:
        type: string
    additionalProperties: false

  GroupUpdate:
    type: object
    required:
      - description
    properties:
      description:
        type: string
    additionalProperties: false

  GroupUsers:
    type: object
    properties:
      array:
        type: array
        items:
          type: object
          properties:
            membershipurl:
              type: string
            user:
              $ref: "#/definitions/User"

  GroupPermissions:
    type: object
    properties:
      array:
        type: array
        items:
          type: object
          properties:
            rid:
              type: string
            description:
              type: string
            aclurl:
              type: string
            actions:
              type: array
              items:
                $ref: "#/definitions/Action"

  ACL:
    type: object
    properties:
      rid:
        type: string
      url:
        type: string
      description:
        type: string
    additionalProperties: false

  ACLCreate:
    type: object
    properties:
      description:
        type: string
    additionalProperties: false

  ACLUpdate:
    type: object
    properties:
      description:
        type: string
    additionalProperties: false

  ACLPermissions:
    type: object
    properties:
      groups:
        type: array
        items:
          type: object
          properties:
            gid:
              type: string
            groupurl:
              type: string
            actions:
              type: array
              items:
                $ref: "#/definitions/Action"
      users:
        type: array
        items:
          type: object
          properties:
            uid:
              type: string
            userurl:
              type: string
            actions:
              type: array
              items:
                $ref: "#/definitions/Action"

  ActionAllowed:
    type: object
    properties:
      allowed:
        type: boolean
    additionalProperties: false

